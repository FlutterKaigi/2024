name: Deploy Ticket

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "Select the environment to deploy"
        options:
          - production
          - staging

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - "docs/**"
      - "apps/app/**"
      - "apps/website/**"
      - "packages/app/**"
      - "**/*.md"
  push:
    branches:
      - main
      - fix/ticket-web-deploy # デバッグ用

permissions:
  contents: read
  deployments: write

jobs:
  decide-environment:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      environment: ${{ steps.decide-environment.outputs.environment }}
    steps:
      - name: Decide Environment
        id: decide-environment
        run: |
          # workflow_dispatchでなにかが選択されたら
          if [ "${{ github.event_name == 'workflow_dispatch' }}" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          fi
          # mainブランチへのpushではproduction
          if [ "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          fi
          # それ以外はstaging
          if [ "${{ github.event_name != 'workflow_dispatch' && github.event_name != 'push' }}" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi

  build-ticket-web:
    runs-on: ubuntu-latest
    needs: decide-environment
    env:
      TARGET_ENVIRONMENT: ${{ needs.decide-environment.outputs.environment }}

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Setup Application Runtime
        uses: ./.github/actions/setup-application-runtime

      - name: Extract Secrets
        working-directory: apps/ticket_web
        run: |
          echo '${{ secrets.STAGING_ENV_FOR_TICKET }}' | base64 -d > defines/staging.env

      - name: Build Web
        working-directory: apps/ticket_web
        run: |
          flutter build web \
            --release \
            --wasm \
            --dart-define-from-file=defines/${{ needs.decide-environment.outputs.environment }}.env

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ticket-web-${{ needs.decide-environment.outputs.environment }}
          path: apps/ticket_web/build/web

  deploy-ticket-web:
    runs-on: ubuntu-latest
    needs:
      - decide-environment
      - build-ticket-web
    env:
      TARGET_ENVIRONMENT: ${{ needs.decide-environment.outputs.environment }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ticket-web-${{ needs.decide-environment.outputs.environment }}
          path: ./

      - name: Set Project Name
        id: set-project-name
        run: |
          if [ "${{ needs.decide-environment.outputs.environment == 'production' }}" ]; then
            echo "projectName=flutterkaigi-ticket-2024" >> $GITHUB_OUTPUT
          fi
          if [ "${{ needs.decide-environment.outputs.environment == 'staging' }}" ]; then
            echo "projectName=flutterkaigi-ticket-2024-staging" >> $GITHUB_OUTPUT
          fi

      # https://github.com/cloudflare/pages-action
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # v1.5.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          projectName: ${{ steps.set-project-name.outputs.projectName }}
          directory: ./
