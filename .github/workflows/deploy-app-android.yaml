name: Deploy App Android

on:
  workflow_dispatch:
    inputs:
      environment:
        description: environment
        required: true
        type: choice
        options:
          - "flutterkaigi-app-2024-development"
          - "flutterkaigi-app-2024-production"

permissions:
  contents: read

jobs:
  check-environment:
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    steps:
      - name: Check Environment
        run: |
          # flutterkaigi-app-2024-development はまだ未対応
          if [ "${{ github.event.inputs.environment }}" = "flutterkaigi-app-2024-development" ]; then
            echo "flutterkaigi-app-2024-development is not supported yet"
            exit 1
          fi

  deploy-app-android:
    needs: check-environment
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment }}
    timeout-minutes: 20

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Application Runtime
        uses: ./.github/actions/setup-application-runtime

      # https://github.com/actions/setup-java
      - name: Setup Android
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: 17
          distribution: temurin

      - name: Decode Key Store
        working-directory: apps/app/android
        run: |
          echo ${{ secrets.UPLOAD_KEY_STORE_BASE64 }} | base64 -d >upload.jks

      - name: Generate build.properties
        working-directory: apps/app/android
        run: |
          cat <<EOL >key.properties
          keyAlias=${{ secrets.UPLOAD_KEY_ALIAS }}
          keyPassword=${{ secrets.UPLOAD_KEY_PASSWORD }}
          keyStoreFilePath=upload.jks
          keyStorePassword=${{ secrets.UPLOAD_KEY_STORE_PASSWORD }}
          EOL

      - name: Build AppBundle
        working-directory: apps/app
        run: |
          flutter build appbundle \
            --dart-define-from-file=${{ vars.DEFINES_FILE_NAME }}

      - name: Create a zip file for Native Debug Symbols
        working-directory: apps/app
        run: |
          cd build/app/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib
          zip -r symbols.zip *
          echo "SYMBOL_FILE_PATH=../build/app/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib/symbols.zip" >> "$GITHUB_ENV"
          echo "MAPPING_FILE_PATH=../build/app/outputs/mapping/release/mapping.txt" >> "$GITHUB_ENV"

      - name: Deploy to internal test
        run: fastlane android deploy_internal
        working-directory: apps/app/android
        env:
          PACKAGE_NAME: ${{ vars.PACKAGE_NAME }}
          SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.SERVICE_ACCOUNT_KEY_BASE64 }}
